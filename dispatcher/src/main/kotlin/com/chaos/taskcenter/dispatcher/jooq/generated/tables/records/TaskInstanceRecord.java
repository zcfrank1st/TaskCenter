/*
 * This file is generated by jOOQ.
*/
package com.chaos.taskcenter.dispatcher.jooq.generated.tables.records;


import com.chaos.taskcenter.dispatcher.jooq.generated.tables.TaskInstance;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskInstanceRecord extends UpdatableRecordImpl<TaskInstanceRecord> implements Record13<String, UInteger, String, String, String, UByte, UInteger, UByte, UInteger, Timestamp, Timestamp, Timestamp, String> {

    private static final long serialVersionUID = 809077987;

    /**
     * Setter for <code>task_center.task_instance.task_instance_id</code>.
     */
    public void setTaskInstanceId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>task_center.task_instance.task_instance_id</code>.
     */
    public String getTaskInstanceId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>task_center.task_instance.task_id</code>.
     */
    public void setTaskId(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>task_center.task_instance.task_id</code>.
     */
    public UInteger getTaskId() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>task_center.task_instance.task_name</code>.
     */
    public void setTaskName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>task_center.task_instance.task_name</code>.
     */
    public String getTaskName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>task_center.task_instance.task_content</code>.
     */
    public void setTaskContent(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>task_center.task_instance.task_content</code>.
     */
    public String getTaskContent() {
        return (String) get(3);
    }

    /**
     * Setter for <code>task_center.task_instance.param</code>.
     */
    public void setParam(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>task_center.task_instance.param</code>.
     */
    public String getParam() {
        return (String) get(4);
    }

    /**
     * Setter for <code>task_center.task_instance.task_type</code>. 0: http 1: shell
     */
    public void setTaskType(UByte value) {
        set(5, value);
    }

    /**
     * Getter for <code>task_center.task_instance.task_type</code>. 0: http 1: shell
     */
    public UByte getTaskType() {
        return (UByte) get(5);
    }

    /**
     * Setter for <code>task_center.task_instance.retry_time_threshold</code>.
     */
    public void setRetryTimeThreshold(UInteger value) {
        set(6, value);
    }

    /**
     * Getter for <code>task_center.task_instance.retry_time_threshold</code>.
     */
    public UInteger getRetryTimeThreshold() {
        return (UInteger) get(6);
    }

    /**
     * Setter for <code>task_center.task_instance.status</code>. 0:准备 1:正在执行 2:失败 3:挂起
     */
    public void setStatus(UByte value) {
        set(7, value);
    }

    /**
     * Getter for <code>task_center.task_instance.status</code>. 0:准备 1:正在执行 2:失败 3:挂起
     */
    public UByte getStatus() {
        return (UByte) get(7);
    }

    /**
     * Setter for <code>task_center.task_instance.retry</code>.
     */
    public void setRetry(UInteger value) {
        set(8, value);
    }

    /**
     * Getter for <code>task_center.task_instance.retry</code>.
     */
    public UInteger getRetry() {
        return (UInteger) get(8);
    }

    /**
     * Setter for <code>task_center.task_instance.execute_time</code>.
     */
    public void setExecuteTime(Timestamp value) {
        set(9, value);
    }

    /**
     * Getter for <code>task_center.task_instance.execute_time</code>.
     */
    public Timestamp getExecuteTime() {
        return (Timestamp) get(9);
    }

    /**
     * Setter for <code>task_center.task_instance.create_time</code>.
     */
    public void setCreateTime(Timestamp value) {
        set(10, value);
    }

    /**
     * Getter for <code>task_center.task_instance.create_time</code>.
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(10);
    }

    /**
     * Setter for <code>task_center.task_instance.update_time</code>.
     */
    public void setUpdateTime(Timestamp value) {
        set(11, value);
    }

    /**
     * Getter for <code>task_center.task_instance.update_time</code>.
     */
    public Timestamp getUpdateTime() {
        return (Timestamp) get(11);
    }

    /**
     * Setter for <code>task_center.task_instance.refer_task_instance_ids</code>.
     */
    public void setReferTaskInstanceIds(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>task_center.task_instance.refer_task_instance_ids</code>.
     */
    public String getReferTaskInstanceIds() {
        return (String) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<String, UInteger, String, String, String, UByte, UInteger, UByte, UInteger, Timestamp, Timestamp, Timestamp, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<String, UInteger, String, String, String, UByte, UInteger, UByte, UInteger, Timestamp, Timestamp, Timestamp, String> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return TaskInstance.TASK_INSTANCE.TASK_INSTANCE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field2() {
        return TaskInstance.TASK_INSTANCE.TASK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return TaskInstance.TASK_INSTANCE.TASK_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return TaskInstance.TASK_INSTANCE.TASK_CONTENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return TaskInstance.TASK_INSTANCE.PARAM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UByte> field6() {
        return TaskInstance.TASK_INSTANCE.TASK_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field7() {
        return TaskInstance.TASK_INSTANCE.RETRY_TIME_THRESHOLD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UByte> field8() {
        return TaskInstance.TASK_INSTANCE.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field9() {
        return TaskInstance.TASK_INSTANCE.RETRY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field10() {
        return TaskInstance.TASK_INSTANCE.EXECUTE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field11() {
        return TaskInstance.TASK_INSTANCE.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field12() {
        return TaskInstance.TASK_INSTANCE.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return TaskInstance.TASK_INSTANCE.REFER_TASK_INSTANCE_IDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getTaskInstanceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value2() {
        return getTaskId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getTaskName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getTaskContent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getParam();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UByte value6() {
        return getTaskType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value7() {
        return getRetryTimeThreshold();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UByte value8() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value9() {
        return getRetry();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value10() {
        return getExecuteTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value11() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value12() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getReferTaskInstanceIds();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskInstanceRecord value1(String value) {
        setTaskInstanceId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskInstanceRecord value2(UInteger value) {
        setTaskId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskInstanceRecord value3(String value) {
        setTaskName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskInstanceRecord value4(String value) {
        setTaskContent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskInstanceRecord value5(String value) {
        setParam(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskInstanceRecord value6(UByte value) {
        setTaskType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskInstanceRecord value7(UInteger value) {
        setRetryTimeThreshold(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskInstanceRecord value8(UByte value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskInstanceRecord value9(UInteger value) {
        setRetry(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskInstanceRecord value10(Timestamp value) {
        setExecuteTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskInstanceRecord value11(Timestamp value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskInstanceRecord value12(Timestamp value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskInstanceRecord value13(String value) {
        setReferTaskInstanceIds(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskInstanceRecord values(String value1, UInteger value2, String value3, String value4, String value5, UByte value6, UInteger value7, UByte value8, UInteger value9, Timestamp value10, Timestamp value11, Timestamp value12, String value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskInstanceRecord
     */
    public TaskInstanceRecord() {
        super(TaskInstance.TASK_INSTANCE);
    }

    /**
     * Create a detached, initialised TaskInstanceRecord
     */
    public TaskInstanceRecord(String taskInstanceId, UInteger taskId, String taskName, String taskContent, String param, UByte taskType, UInteger retryTimeThreshold, UByte status, UInteger retry, Timestamp executeTime, Timestamp createTime, Timestamp updateTime, String referTaskInstanceIds) {
        super(TaskInstance.TASK_INSTANCE);

        set(0, taskInstanceId);
        set(1, taskId);
        set(2, taskName);
        set(3, taskContent);
        set(4, param);
        set(5, taskType);
        set(6, retryTimeThreshold);
        set(7, status);
        set(8, retry);
        set(9, executeTime);
        set(10, createTime);
        set(11, updateTime);
        set(12, referTaskInstanceIds);
    }
}
